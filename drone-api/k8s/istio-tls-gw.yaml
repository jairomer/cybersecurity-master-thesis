apiVersion: v1
kind: Namespace
metadata:
  name: drone-api-ingress
  labels:
    istio-injection: enabled
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: tls-gateway
  namespace: drone-api-ingress
spec:
  gatewayClassName: istio
  listeners:
  - name: https
    hostname: "*.drone.com"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: drone-api-credential
        kind: Secret
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: drone-api-tls-officer
  namespace: default
spec:
  parentRefs:
  - name: tls-gateway
    namespace: drone-api-ingress 
  hostnames: ["officer.drone.com"]
  rules:
  - matches:
    - path:
        type: Exact 
        value: /login
    - path:
        type: PathPrefix
        value: /battlefield
    - path:
        type: Exact 
        value: /battlefield/provision
    backendRefs:
    - name: drone-api 
      port: 8000
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: drone-api-tls-drone
  namespace: default
spec:
  parentRefs:
  - name: tls-gateway
    namespace: drone-api-ingress 
  hostnames: ["cli.drone.com"]
  rules:
  - matches:
    - path:
        type: Exact 
        value: /login
    - path:
        type: PathPrefix
        value: /battlefield
    backendRefs:
    - name: drone-api 
      port: 8000
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: drone-api-tls-pilot
  namespace: default
spec:
  parentRefs:
  - name: tls-gateway
    namespace: drone-api-ingress 
  hostnames: ["pilot.drone.com"]
  rules:
  - matches:
    - path:
        type: Exact 
        value: /login
    - path:
        type: PathPrefix
        value: /battlefield
    backendRefs:
    - name: drone-api 
      port: 8000
