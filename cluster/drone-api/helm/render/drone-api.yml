---
# Source: drone-api/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: droneapi
  labels:
    istio-injection: enabled
---
# Source: drone-api/templates/app/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx
  namespace: droneapi
  labels:
    helm.sh/chart: drone-api-0.1.0
    app.kubernetes.io/name: drone-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: drone-api/templates/app/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: droneapi
  labels:
    helm.sh/chart: drone-api-0.1.0
    app.kubernetes.io/name: drone-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: drone-api
    app.kubernetes.io/instance: release-name
---
# Source: drone-api/templates/app/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: droneapi
  labels:
    helm.sh/chart: drone-api-0.1.0
    app.kubernetes.io/name: drone-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-api
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: drone-api-0.1.0
        app.kubernetes.io/name: drone-api
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: nginx
      containers:
        - name: drone-api
          image: "nginx:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
# Source: drone-api/templates/istio/gateway.yaml
apiVersion: networking.istio.io/v1
kind: Gateway
metadata:
  name: drone-api-gateway
  namespace: droneapi
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: clients-cacert
    hosts:
    - drone.api.xyz
---
# Source: drone-api/templates/istio/nginx-virtual-service.yaml
apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: nginx
  namespace: droneapi
spec:
  hosts:
  - "*"
  gateways:
  - drone-api-gateway
  http:
  - match:
    - uri:
        prefix: /*
    route:
    - destination:
        host: nginx
        port:
          number: 8000
---
# Source: drone-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "nginx-test-connection"
  labels:
    helm.sh/chart: drone-api-0.1.0
    app.kubernetes.io/name: drone-api
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['nginx:8000']
  restartPolicy: Never
